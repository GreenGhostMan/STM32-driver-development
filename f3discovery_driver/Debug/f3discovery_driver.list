
f3discovery_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000484  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000618  08000620  00010620  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000618  08000618  00010620  2**0
                  CONTENTS
  4 .ARM          00000000  08000618  08000618  00010620  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000618  08000620  00010620  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000618  08000618  00010618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800061c  0800061c  0001061c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010620  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010620  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00010620  2**0
                  CONTENTS, READONLY
 13 .debug_info   000006ee  00000000  00000000  0001064a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001dc  00000000  00000000  00010d38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a0  00000000  00000000  00010f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000078  00000000  00000000  00010fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000012d2  00000000  00000000  00011030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000b2a  00000000  00000000  00012302  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004e13  00000000  00000000  00012e2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  00017c3f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001ac  00000000  00000000  00017c94  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000600 	.word	0x08000600

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000600 	.word	0x08000600

080001d4 <main>:
 */
#include "stm32f3discovery.h"


int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpio_led, gpio_btn;

	gpio_led.pGPIOx = GPIOE;
 80001da:	4b1b      	ldr	r3, [pc, #108]	; (8000248 <main+0x74>)
 80001dc:	60fb      	str	r3, [r7, #12]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 80001de:	2308      	movs	r3, #8
 80001e0:	743b      	strb	r3, [r7, #16]
	gpio_led.GPIO_PinConfig.GPIO_PinMode   = GPIO_MODE_OUT;
 80001e2:	2301      	movs	r3, #1
 80001e4:	747b      	strb	r3, [r7, #17]
	gpio_led.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_SPEED_FAST;
 80001e6:	2302      	movs	r3, #2
 80001e8:	74bb      	strb	r3, [r7, #18]
	gpio_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001ea:	2300      	movs	r3, #0
 80001ec:	753b      	strb	r3, [r7, #20]
	gpio_led.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001ee:	2300      	movs	r3, #0
 80001f0:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOE, ENABLE);
 80001f2:	2101      	movs	r1, #1
 80001f4:	4814      	ldr	r0, [pc, #80]	; (8000248 <main+0x74>)
 80001f6:	f000 f853 	bl	80002a0 <GPIO_PeriClockControl>
	GPIO_Init(&gpio_led);
 80001fa:	f107 030c 	add.w	r3, r7, #12
 80001fe:	4618      	mov	r0, r3
 8000200:	f000 f8ea 	bl	80003d8 <GPIO_Init>

	gpio_btn.pGPIOx = GPIOA;
 8000204:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000208:	603b      	str	r3, [r7, #0]
	gpio_btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800020a:	2300      	movs	r3, #0
 800020c:	713b      	strb	r3, [r7, #4]
	gpio_btn.GPIO_PinConfig.GPIO_PinMode   = GPIO_MODE_IN;
 800020e:	2300      	movs	r3, #0
 8000210:	717b      	strb	r3, [r7, #5]
	gpio_btn.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_SPEED_FAST;
 8000212:	2302      	movs	r3, #2
 8000214:	71bb      	strb	r3, [r7, #6]
	gpio_btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000216:	2300      	movs	r3, #0
 8000218:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOA, ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000220:	f000 f83e 	bl	80002a0 <GPIO_PeriClockControl>
	GPIO_Init(&gpio_btn);
 8000224:	463b      	mov	r3, r7
 8000226:	4618      	mov	r0, r3
 8000228:	f000 f8d6 	bl	80003d8 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 800022c:	2100      	movs	r1, #0
 800022e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000232:	f000 f998 	bl	8000566 <GPIO_ReadFromInputPin>
 8000236:	4603      	mov	r3, r0
 8000238:	2b00      	cmp	r3, #0
 800023a:	d0f7      	beq.n	800022c <main+0x58>
		{
			GPIO_ToggleOutputPin(GPIOE, GPIO_PIN_NO_8);
 800023c:	2108      	movs	r1, #8
 800023e:	4802      	ldr	r0, [pc, #8]	; (8000248 <main+0x74>)
 8000240:	f000 f9a6 	bl	8000590 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0))
 8000244:	e7f2      	b.n	800022c <main+0x58>
 8000246:	bf00      	nop
 8000248:	48001000 	.word	0x48001000

0800024c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800024c:	480d      	ldr	r0, [pc, #52]	; (8000284 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000250:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000254:	480c      	ldr	r0, [pc, #48]	; (8000288 <LoopForever+0x6>)
  ldr r1, =_edata
 8000256:	490d      	ldr	r1, [pc, #52]	; (800028c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000258:	4a0d      	ldr	r2, [pc, #52]	; (8000290 <LoopForever+0xe>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800025c:	e002      	b.n	8000264 <LoopCopyDataInit>

0800025e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000260:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000262:	3304      	adds	r3, #4

08000264 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000264:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000266:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000268:	d3f9      	bcc.n	800025e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026a:	4a0a      	ldr	r2, [pc, #40]	; (8000294 <LoopForever+0x12>)
  ldr r4, =_ebss
 800026c:	4c0a      	ldr	r4, [pc, #40]	; (8000298 <LoopForever+0x16>)
  movs r3, #0
 800026e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000270:	e001      	b.n	8000276 <LoopFillZerobss>

08000272 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000272:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000274:	3204      	adds	r2, #4

08000276 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000276:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000278:	d3fb      	bcc.n	8000272 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027a:	f000 f99d 	bl	80005b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027e:	f7ff ffa9 	bl	80001d4 <main>

08000282 <LoopForever>:

LoopForever:
    b LoopForever
 8000282:	e7fe      	b.n	8000282 <LoopForever>
  ldr   r0, =_estack
 8000284:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000288:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800028c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000290:	08000620 	.word	0x08000620
  ldr r2, =_sbss
 8000294:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000298:	2000001c 	.word	0x2000001c

0800029c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800029c:	e7fe      	b.n	800029c <ADC1_2_IRQHandler>
	...

080002a0 <GPIO_PeriClockControl>:
#include "stm32f3_gpio_driver.h"

// peripheral clock setup
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	460b      	mov	r3, r1
 80002aa:	70fb      	strb	r3, [r7, #3]
	if( EnOrDi == ENABLE )
 80002ac:	78fb      	ldrb	r3, [r7, #3]
 80002ae:	2b01      	cmp	r3, #1
 80002b0:	d141      	bne.n	8000336 <GPIO_PeriClockControl+0x96>
	{
		if( pGPIOx == GPIOA )
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80002b8:	d106      	bne.n	80002c8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002ba:	4b42      	ldr	r3, [pc, #264]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002bc:	695b      	ldr	r3, [r3, #20]
 80002be:	4a41      	ldr	r2, [pc, #260]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002c0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002c4:	6153      	str	r3, [r2, #20]
		else if( pGPIOx == GPIOF )
		{
			GPIOF_PCLK_DI();
		}
	}
}
 80002c6:	e077      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOB )
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a3f      	ldr	r2, [pc, #252]	; (80003c8 <GPIO_PeriClockControl+0x128>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002d0:	4b3c      	ldr	r3, [pc, #240]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002d2:	695b      	ldr	r3, [r3, #20]
 80002d4:	4a3b      	ldr	r2, [pc, #236]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002d6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80002da:	6153      	str	r3, [r2, #20]
}
 80002dc:	e06c      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOC )
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a3a      	ldr	r2, [pc, #232]	; (80003cc <GPIO_PeriClockControl+0x12c>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002e6:	4b37      	ldr	r3, [pc, #220]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002e8:	695b      	ldr	r3, [r3, #20]
 80002ea:	4a36      	ldr	r2, [pc, #216]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002ec:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80002f0:	6153      	str	r3, [r2, #20]
}
 80002f2:	e061      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOD )
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a36      	ldr	r2, [pc, #216]	; (80003d0 <GPIO_PeriClockControl+0x130>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002fc:	4b31      	ldr	r3, [pc, #196]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80002fe:	695b      	ldr	r3, [r3, #20]
 8000300:	4a30      	ldr	r2, [pc, #192]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000302:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000306:	6153      	str	r3, [r2, #20]
}
 8000308:	e056      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOE )
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a31      	ldr	r2, [pc, #196]	; (80003d4 <GPIO_PeriClockControl+0x134>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000312:	4b2c      	ldr	r3, [pc, #176]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000314:	695b      	ldr	r3, [r3, #20]
 8000316:	4a2b      	ldr	r2, [pc, #172]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000318:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800031c:	6153      	str	r3, [r2, #20]
}
 800031e:	e04b      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOF )
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a29      	ldr	r2, [pc, #164]	; (80003c8 <GPIO_PeriClockControl+0x128>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d147      	bne.n	80003b8 <GPIO_PeriClockControl+0x118>
			GPIOF_PCLK_EN();
 8000328:	4b26      	ldr	r3, [pc, #152]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 800032a:	695b      	ldr	r3, [r3, #20]
 800032c:	4a25      	ldr	r2, [pc, #148]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 800032e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000332:	6153      	str	r3, [r2, #20]
}
 8000334:	e040      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		if( pGPIOx == GPIOA )
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 800033e:	4b21      	ldr	r3, [pc, #132]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000340:	695b      	ldr	r3, [r3, #20]
 8000342:	4a20      	ldr	r2, [pc, #128]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000344:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8000348:	6153      	str	r3, [r2, #20]
}
 800034a:	e035      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOB )
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a1e      	ldr	r2, [pc, #120]	; (80003c8 <GPIO_PeriClockControl+0x128>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 8000354:	4b1b      	ldr	r3, [pc, #108]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000356:	695b      	ldr	r3, [r3, #20]
 8000358:	4a1a      	ldr	r2, [pc, #104]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 800035a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800035e:	6153      	str	r3, [r2, #20]
}
 8000360:	e02a      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOC )
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a19      	ldr	r2, [pc, #100]	; (80003cc <GPIO_PeriClockControl+0x12c>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 800036a:	4b16      	ldr	r3, [pc, #88]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 800036c:	695b      	ldr	r3, [r3, #20]
 800036e:	4a15      	ldr	r2, [pc, #84]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000370:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8000374:	6153      	str	r3, [r2, #20]
}
 8000376:	e01f      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOD )
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a15      	ldr	r2, [pc, #84]	; (80003d0 <GPIO_PeriClockControl+0x130>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 8000380:	4b10      	ldr	r3, [pc, #64]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000382:	695b      	ldr	r3, [r3, #20]
 8000384:	4a0f      	ldr	r2, [pc, #60]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000386:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800038a:	6153      	str	r3, [r2, #20]
}
 800038c:	e014      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOE )
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a10      	ldr	r2, [pc, #64]	; (80003d4 <GPIO_PeriClockControl+0x134>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 8000396:	4b0b      	ldr	r3, [pc, #44]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 8000398:	695b      	ldr	r3, [r3, #20]
 800039a:	4a0a      	ldr	r2, [pc, #40]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 800039c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80003a0:	6153      	str	r3, [r2, #20]
}
 80003a2:	e009      	b.n	80003b8 <GPIO_PeriClockControl+0x118>
		else if( pGPIOx == GPIOF )
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a08      	ldr	r2, [pc, #32]	; (80003c8 <GPIO_PeriClockControl+0x128>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d105      	bne.n	80003b8 <GPIO_PeriClockControl+0x118>
			GPIOF_PCLK_DI();
 80003ac:	4b05      	ldr	r3, [pc, #20]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80003ae:	695b      	ldr	r3, [r3, #20]
 80003b0:	4a04      	ldr	r2, [pc, #16]	; (80003c4 <GPIO_PeriClockControl+0x124>)
 80003b2:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80003b6:	6153      	str	r3, [r2, #20]
}
 80003b8:	bf00      	nop
 80003ba:	370c      	adds	r7, #12
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40021000 	.word	0x40021000
 80003c8:	48000400 	.word	0x48000400
 80003cc:	48000800 	.word	0x48000800
 80003d0:	48000c00 	.word	0x48000c00
 80003d4:	48001000 	.word	0x48001000

080003d8 <GPIO_Init>:

// init and deinit
void GPIO_Init(GPIO_Handle_t *pGPIO_Handle)
{
 80003d8:	b480      	push	{r7}
 80003da:	b087      	sub	sp, #28
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80003e0:	2300      	movs	r3, #0
 80003e2:	617b      	str	r3, [r7, #20]
	// configure mode
	if( pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG )
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	795b      	ldrb	r3, [r3, #5]
 80003e8:	2b03      	cmp	r3, #3
 80003ea:	d81e      	bhi.n	800042a <GPIO_Init+0x52>
	{
		temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	795b      	ldrb	r3, [r3, #5]
 80003f0:	461a      	mov	r2, r3
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	791b      	ldrb	r3, [r3, #4]
 80003f6:	005b      	lsls	r3, r3, #1
 80003f8:	fa02 f303 	lsl.w	r3, r2, r3
 80003fc:	617b      	str	r3, [r7, #20]
		pGPIO_Handle->pGPIOx->MODER &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	681a      	ldr	r2, [r3, #0]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	791b      	ldrb	r3, [r3, #4]
 8000408:	4619      	mov	r1, r3
 800040a:	2303      	movs	r3, #3
 800040c:	408b      	lsls	r3, r1
 800040e:	43db      	mvns	r3, r3
 8000410:	4619      	mov	r1, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	400a      	ands	r2, r1
 8000418:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER |= temp;
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	6819      	ldr	r1, [r3, #0]
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	697a      	ldr	r2, [r7, #20]
 8000426:	430a      	orrs	r2, r1
 8000428:	601a      	str	r2, [r3, #0]
	}
	else  // interrupt mode
	{

	}
	temp = 0;
 800042a:	2300      	movs	r3, #0
 800042c:	617b      	str	r3, [r7, #20]
	// configure speed
	temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	799b      	ldrb	r3, [r3, #6]
 8000432:	461a      	mov	r2, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	791b      	ldrb	r3, [r3, #4]
 8000438:	005b      	lsls	r3, r3, #1
 800043a:	fa02 f303 	lsl.w	r3, r2, r3
 800043e:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	689a      	ldr	r2, [r3, #8]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	791b      	ldrb	r3, [r3, #4]
 800044a:	4619      	mov	r1, r3
 800044c:	2303      	movs	r3, #3
 800044e:	408b      	lsls	r3, r1
 8000450:	43db      	mvns	r3, r3
 8000452:	4619      	mov	r1, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	400a      	ands	r2, r1
 800045a:	609a      	str	r2, [r3, #8]
	pGPIO_Handle->pGPIOx->OSPEEDR |= temp;
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	6899      	ldr	r1, [r3, #8]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	697a      	ldr	r2, [r7, #20]
 8000468:	430a      	orrs	r2, r1
 800046a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800046c:	2300      	movs	r3, #0
 800046e:	617b      	str	r3, [r7, #20]
	// configure pull up pull down
	temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	79db      	ldrb	r3, [r3, #7]
 8000474:	461a      	mov	r2, r3
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	791b      	ldrb	r3, [r3, #4]
 800047a:	005b      	lsls	r3, r3, #1
 800047c:	fa02 f303 	lsl.w	r3, r2, r3
 8000480:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->PUPDR &= ~(0x3 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	68da      	ldr	r2, [r3, #12]
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	791b      	ldrb	r3, [r3, #4]
 800048c:	4619      	mov	r1, r3
 800048e:	2303      	movs	r3, #3
 8000490:	408b      	lsls	r3, r1
 8000492:	43db      	mvns	r3, r3
 8000494:	4619      	mov	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	400a      	ands	r2, r1
 800049c:	60da      	str	r2, [r3, #12]
	pGPIO_Handle->pGPIOx->PUPDR |= temp;
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	68d9      	ldr	r1, [r3, #12]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	697a      	ldr	r2, [r7, #20]
 80004aa:	430a      	orrs	r2, r1
 80004ac:	60da      	str	r2, [r3, #12]

	temp = 0;
 80004ae:	2300      	movs	r3, #0
 80004b0:	617b      	str	r3, [r7, #20]
	// configure output type
	temp = pGPIO_Handle->GPIO_PinConfig.GPIO_PinOPType << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	7a1b      	ldrb	r3, [r3, #8]
 80004b6:	461a      	mov	r2, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OTYPER &= ~(0x1 << pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	685a      	ldr	r2, [r3, #4]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2301      	movs	r3, #1
 80004d0:	408b      	lsls	r3, r1
 80004d2:	43db      	mvns	r3, r3
 80004d4:	4619      	mov	r1, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	400a      	ands	r2, r1
 80004dc:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER |= temp;
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	6859      	ldr	r1, [r3, #4]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	697a      	ldr	r2, [r7, #20]
 80004ea:	430a      	orrs	r2, r1
 80004ec:	605a      	str	r2, [r3, #4]

	// configure alternative if require
	if( pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN )
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	795b      	ldrb	r3, [r3, #5]
 80004f2:	2b02      	cmp	r3, #2
 80004f4:	d132      	bne.n	800055c <GPIO_Init+0x184>
	{
		// configure the alternative function register
		uint32_t temp1, temp2;
		temp1 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/8;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	08db      	lsrs	r3, r3, #3
 80004fc:	b2db      	uxtb	r3, r3
 80004fe:	613b      	str	r3, [r7, #16]
		temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	791b      	ldrb	r3, [r3, #4]
 8000504:	f003 0307 	and.w	r3, r3, #7
 8000508:	60fb      	str	r3, [r7, #12]
		pGPIO_Handle->pGPIOx->AFR[temp1] &= ~( 0xF << (4*temp2));
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	693a      	ldr	r2, [r7, #16]
 8000510:	3208      	adds	r2, #8
 8000512:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000516:	68fb      	ldr	r3, [r7, #12]
 8000518:	009b      	lsls	r3, r3, #2
 800051a:	210f      	movs	r1, #15
 800051c:	fa01 f303 	lsl.w	r3, r1, r3
 8000520:	43db      	mvns	r3, r3
 8000522:	4619      	mov	r1, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4011      	ands	r1, r2
 800052a:	693a      	ldr	r2, [r7, #16]
 800052c:	3208      	adds	r2, #8
 800052e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIO_Handle->pGPIOx->AFR[temp1] |= pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2);
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	693a      	ldr	r2, [r7, #16]
 8000538:	3208      	adds	r2, #8
 800053a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	7a5b      	ldrb	r3, [r3, #9]
 8000542:	4619      	mov	r1, r3
 8000544:	68fb      	ldr	r3, [r7, #12]
 8000546:	009b      	lsls	r3, r3, #2
 8000548:	fa01 f303 	lsl.w	r3, r1, r3
 800054c:	4619      	mov	r1, r3
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4311      	orrs	r1, r2
 8000554:	693a      	ldr	r2, [r7, #16]
 8000556:	3208      	adds	r2, #8
 8000558:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800055c:	bf00      	nop
 800055e:	371c      	adds	r7, #28
 8000560:	46bd      	mov	sp, r7
 8000562:	bc80      	pop	{r7}
 8000564:	4770      	bx	lr

08000566 <GPIO_ReadFromInputPin>:
	}
}

// data read write
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000566:	b480      	push	{r7}
 8000568:	b085      	sub	sp, #20
 800056a:	af00      	add	r7, sp, #0
 800056c:	6078      	str	r0, [r7, #4]
 800056e:	460b      	mov	r3, r1
 8000570:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) ( (pGPIOx->IDR >> PinNumber) & 0x00000001 );
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	691a      	ldr	r2, [r3, #16]
 8000576:	78fb      	ldrb	r3, [r7, #3]
 8000578:	fa22 f303 	lsr.w	r3, r2, r3
 800057c:	b2db      	uxtb	r3, r3
 800057e:	f003 0301 	and.w	r3, r3, #1
 8000582:	73fb      	strb	r3, [r7, #15]
	return value;
 8000584:	7bfb      	ldrb	r3, [r7, #15]
}
 8000586:	4618      	mov	r0, r3
 8000588:	3714      	adds	r7, #20
 800058a:	46bd      	mov	sp, r7
 800058c:	bc80      	pop	{r7}
 800058e:	4770      	bx	lr

08000590 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000590:	b480      	push	{r7}
 8000592:	b083      	sub	sp, #12
 8000594:	af00      	add	r7, sp, #0
 8000596:	6078      	str	r0, [r7, #4]
 8000598:	460b      	mov	r3, r1
 800059a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	695b      	ldr	r3, [r3, #20]
 80005a0:	78fa      	ldrb	r2, [r7, #3]
 80005a2:	2101      	movs	r1, #1
 80005a4:	fa01 f202 	lsl.w	r2, r1, r2
 80005a8:	405a      	eors	r2, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	615a      	str	r2, [r3, #20]
}
 80005ae:	bf00      	nop
 80005b0:	370c      	adds	r7, #12
 80005b2:	46bd      	mov	sp, r7
 80005b4:	bc80      	pop	{r7}
 80005b6:	4770      	bx	lr

080005b8 <__libc_init_array>:
 80005b8:	b570      	push	{r4, r5, r6, lr}
 80005ba:	4d0d      	ldr	r5, [pc, #52]	; (80005f0 <__libc_init_array+0x38>)
 80005bc:	4c0d      	ldr	r4, [pc, #52]	; (80005f4 <__libc_init_array+0x3c>)
 80005be:	1b64      	subs	r4, r4, r5
 80005c0:	10a4      	asrs	r4, r4, #2
 80005c2:	2600      	movs	r6, #0
 80005c4:	42a6      	cmp	r6, r4
 80005c6:	d109      	bne.n	80005dc <__libc_init_array+0x24>
 80005c8:	4d0b      	ldr	r5, [pc, #44]	; (80005f8 <__libc_init_array+0x40>)
 80005ca:	4c0c      	ldr	r4, [pc, #48]	; (80005fc <__libc_init_array+0x44>)
 80005cc:	f000 f818 	bl	8000600 <_init>
 80005d0:	1b64      	subs	r4, r4, r5
 80005d2:	10a4      	asrs	r4, r4, #2
 80005d4:	2600      	movs	r6, #0
 80005d6:	42a6      	cmp	r6, r4
 80005d8:	d105      	bne.n	80005e6 <__libc_init_array+0x2e>
 80005da:	bd70      	pop	{r4, r5, r6, pc}
 80005dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80005e0:	4798      	blx	r3
 80005e2:	3601      	adds	r6, #1
 80005e4:	e7ee      	b.n	80005c4 <__libc_init_array+0xc>
 80005e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ea:	4798      	blx	r3
 80005ec:	3601      	adds	r6, #1
 80005ee:	e7f2      	b.n	80005d6 <__libc_init_array+0x1e>
 80005f0:	08000618 	.word	0x08000618
 80005f4:	08000618 	.word	0x08000618
 80005f8:	08000618 	.word	0x08000618
 80005fc:	0800061c 	.word	0x0800061c

08000600 <_init>:
 8000600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000602:	bf00      	nop
 8000604:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000606:	bc08      	pop	{r3}
 8000608:	469e      	mov	lr, r3
 800060a:	4770      	bx	lr

0800060c <_fini>:
 800060c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060e:	bf00      	nop
 8000610:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000612:	bc08      	pop	{r3}
 8000614:	469e      	mov	lr, r3
 8000616:	4770      	bx	lr
